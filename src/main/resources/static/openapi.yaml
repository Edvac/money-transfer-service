openapi: 3.0.3
info:
  title: Money Transfer Service API
  description: RESTful API for money transfers between accounts
  version: 1.0.0
  contact:
    name: Development Team
    email: dev@example.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8080
    description: Development server

tags:
  - name: Accounts
    description: Account management operations
  - name: Transfers
    description: Money transfer operations

paths:
  /api/accounts:
    get:
      summary: Get all accounts
      description: Returns a list of all accounts in the system
      operationId: getAllAccounts
      tags:
        - Accounts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      summary: Create a new account
      description: Creates a new account with the provided details
      operationId: createAccount
      tags:
        - Accounts
      requestBody:
        description: Account object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example:
              ownerName: "Charlie"
              balance: 200.00
              currency: "USD"
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid input

  /api/accounts/{id}:
    get:
      summary: Get account by ID
      description: Returns a single account by its ID
      operationId: getAccountById
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: ID of the account to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account not found

  /api/transfers:
    get:
      summary: Get all transfers
      description: Returns a list of all transfers in the system
      operationId: getAllTransfers
      tags:
        - Transfers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Create a new money transfer
      description: Transfers money from one account to another
      operationId: createTransfer
      tags:
        - Transfers
      requestBody:
        description: Transfer details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fromAccountId
                - toAccountId
                - amount
              properties:
                fromAccountId:
                  type: integer
                  format: int64
                  description: ID of the source account
                toAccountId:
                  type: integer
                  format: int64
                  description: ID of the destination account
                amount:
                  type: number
                  format: double
                  description: Amount to transfer
            example:
              fromAccountId: 1
              toAccountId: 2
              amount: 25.00
      responses:
        '201':
          description: Transfer successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '404':
          description: Account not found
        '422':
          description: Insufficient funds or other business rule violation

  /api/transfers/{id}:
    get:
      summary: Get transfer by ID
      description: Returns a single transfer by its ID
      operationId: getTransferById
      tags:
        - Transfers
      parameters:
        - name: id
          in: path
          description: ID of the transfer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transfer not found

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the account
        ownerName:
          type: string
          description: Name of the account owner
        balance:
          type: number
          format: double
          description: Current balance of the account
        currency:
          type: string
          description: Currency code (e.g., USD, EUR)
        createdAt:
          type: string
          format: date-time
          description: Account creation timestamp
      example:
        id: 1
        ownerName: "Alice"
        balance: 1000.00
        currency: "USD"
        createdAt: "2023-05-01T12:00:00Z"

    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the transaction
        fromAccountId:
          type: integer
          format: int64
          description: ID of the source account
        toAccountId:
          type: integer
          format: int64
          description: ID of the destination account
        amount:
          type: number
          format: double
          description: Transfer amount
        timestamp:
          type: string
          format: date-time
          description: Transaction timestamp
      example:
        id: 1
        fromAccountId: 1
        toAccountId: 2
        amount: 100.00
        timestamp: "2023-05-02T14:30:00Z"